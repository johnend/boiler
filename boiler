#!/bin/bash

#   ██████╗ ██████╗ ███╗   ███╗██████╗  ██████╗ ███╗   ██╗███████╗███╗   ██╗████████╗     ██████╗ ███████╗███╗   ██╗
#  ██╔════╝██╔═══██╗████╗ ████║██╔══██╗██╔═══██╗████╗  ██║██╔════╝████╗  ██║╚══██╔══╝    ██╔════╝ ██╔════╝████╗  ██║
#  ██║     ██║   ██║██╔████╔██║██████╔╝██║   ██║██╔██╗ ██║█████╗  ██╔██╗ ██║   ██║       ██║  ███╗█████╗  ██╔██╗ ██║
#  ██║     ██║   ██║██║╚██╔╝██║██╔═══╝ ██║   ██║██║╚██╗██║██╔══╝  ██║╚██╗██║   ██║       ██║   ██║██╔══╝  ██║╚██╗██║
#  ╚██████╗╚██████╔╝██║ ╚═╝ ██║██║     ╚██████╔╝██║ ╚████║███████╗██║ ╚████║   ██║       ╚██████╔╝███████╗██║ ╚████║
#   ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝      ╚═════╝ ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═══╝   ╚═╝        ╚═════╝ ╚══════╝╚═╝  ╚═══╝
#                                                                                                                   
#
# Author: John Enderby
# Github: johnend
#
# Created on 10/04/2024
#
# A component generator script for web-based React projects.
############################################################
#
# This is a small project to help speed up creating front-end components in React based frameworks.
# The intention is to build it out over time to be configurable based on different frameworks, and ideally to support
# other libraries too (such as Storybook, Jest etc.) that have their own files that live alongside your components.

###--- Colors and formatting ---###
# Foreground colors
REDDEF=$(tput setaf 1)
GREDEF=$(tput setaf 2)
YELDEF=$(tput setaf 3)
BLUDEF=$(tput setaf 4)
MAGDEF=$(tput setaf 5)
CYADEF=$(tput setaf 6)
WHIDEF=$(tput setaf 7)
BLADEF=$(tput setaf 8)

# Background colors

# Reset formatting to default
RESET=$(tput sgr0)
BLD=$(tput bold)

# Settings vars
GLOBAL_CONFIG_DIR="$HOME/.config/boiler"
SELECTED_CONFIG_DIR=""

logo () {
    printf "
88                      %s\"\"%s 88                        
88                      %s88%s 88                        
88                         88                        
88,dPPYba,   ,adPPYba,  88 88  ,adPPYba, 8b,dPPYba,  
88P'    \"8a a8\"     \"8a 88 88 a8P_____88 88P'   \"Y8  
88       d8 8b       d8 88 88 8PP\"\"\"\"\"\"\" 88          
88b,   ,a8\" \"8a,   ,a8\" 88 88 \"8b,   ,aa 88          
8Y\"Ybbd8\"'   \`\"YbbdP\"'  88 88  \`\"Ybbd8\"' 88\n\n" "${YELDEF}" "${RESET}" "${REDDEF}" "${RESET}"
    printf '%sHi I'\''m%s boiler%s! 👋\n\n' "${CYADEF}" "${REDDEF}" "${RESET}"
}

### --- Welcome --- ###
logo

printf "It looks like this is the first time you've asked me to help.
I need to ask some questions your project so I can generate the right files in the right places. 😃"

printf "\n\n%s1.%s Would you like to save these settings globally, locally, or not at all?
You can, and probably should do both, you can generate a new local config by running: boiler -l\n\n" "${REDDEF}" "${RESET}"

PS3="Please select an option: "
select i in "Globally" "Locally" "Not at all" "Quit"; do
  case $i in
    "Globally" ) printf "Saving settings to %s\n" "${GLOBAL_CONFIG_DIR}"
    SELECTED_CONFIG_DIR=${GLOBAL_CONFIG_DIR}
    echo "$SELECTED_CONFIG_DIR"
    break
    ;;
    "Locally" ) printf "\nWhere would you like your config saved? (absolute path preferred and include env vars)\n"
    read -p "Enter directory path: " vardir
    SELECTED_CONFIG_DIR=$vardir
    echo "$SELECTED_CONFIG_DIR"
    break
    ;;
    "Not at all" ) printf "Not saving config this time - re-running boiler will ask these questions again\n"
    break
    ;;
    "Quit" )
    break
    ;;
    * ) echo "$REPLY is not a valid option"
    break
    ;;
  esac
done